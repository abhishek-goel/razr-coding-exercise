/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.10-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.razr.coding.exercise.api;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.razr.coding.exercise.model.SingleSidedShape;
import com.razr.coding.exercise.repo.ShapeRepository;

@RestController
public class ShapesController {

	@Autowired
	ShapeRepository shapeRepository;
	
    @GetMapping(value = "/shapes/random",
    produces = { "application/json" })
    @ResponseBody
    public ResponseEntity<List<SingleSidedShape>> getRandomShapes() {
		return new ResponseEntity<List<SingleSidedShape>>(shapeRepository.getRandomShapes(), HttpStatus.OK);
    }
    
    @GetMapping(value = "/shapes/sorted",
    produces = { "application/json" })
    @ResponseBody
    public ResponseEntity<List<SingleSidedShape>> getSortedShapes() {
    	List<SingleSidedShape> sortedShapes = shapeRepository.getSortedShapes();
    	
    	if( sortedShapes != null ) {
    		return new ResponseEntity<List<SingleSidedShape>>(sortedShapes, HttpStatus.OK);
    	}
    	else {
    		return ResponseEntity.noContent().build();
    	}
    }
    
    @GetMapping(value = "/shapes/closest-to-mean-area",
    produces = { "application/json" })
    @ResponseBody
    public ResponseEntity<List<SingleSidedShape>> getShapesWithAreaClosestToMean() {
    	List<SingleSidedShape> shapesWithAreaClosestToMean = shapeRepository.getShapesWithAreaClosestToMean();
    	
    	if( shapesWithAreaClosestToMean != null ) {
    		return new ResponseEntity<List<SingleSidedShape>>(shapesWithAreaClosestToMean, HttpStatus.OK);
    	}
    	else {
    		return ResponseEntity.noContent().build();
    	}
    }
}